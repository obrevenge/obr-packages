#!/usr/bin/env python3

import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk
import os
from gi.repository.GdkPixbuf import Pixbuf, InterpType


class MyWindow(Gtk.Window):

    def __init__(self):
        Gtk.Window.__init__(self, title="Revenge OS Tools")
        self.set_border_width(6)
        self.set_default_size(700, 400)
        self.windowicon = Gtk.Image()
        self.windowicon.set_from_icon_name('gnome-settings', Gtk.IconSize.MENU)
        self.main_box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=10)
        self.add(self.main_box)
        self.labelbox = Gtk.Box()
        self.mainlabel = Gtk.Label()
        self.mainlabel.set_markup("<big>Revenge OS Tools</big>\nCustomize and Repair Your System")
        self.mainimage = Gtk.Image()
        self.mainimage.set_from_file("/usr/share/Icons/revenge_logo.png")
        self.labelbox.pack_start(self.mainimage, True, True, 0)
        self.labelbox.pack_start(self.mainlabel, True, True, 0)
        self.main_box.pack_start(self.labelbox, True, True, 0)
        self.button_box = Gtk.Box(spacing=10)
        self.main_box.pack_end(self.button_box, True, True, 0)
        self.button_box.set_homogeneous(20)

        # Close button
        self.close_button = Gtk.Button("Close")
        self.close_button.connect("clicked", Gtk.main_quit)
        self.button_box.pack_end(self.close_button, False, False, 0)


        self.page4 = Gtk.Box()
        self.page4.set_border_width(10)
        self.page4.set_homogeneous(20)
        self.obr_box1 = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=20)
        self.obr_box1.set_homogeneous(20)
        self.obr_box1.set_border_width(30)
        self.obr_box2 = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=20)
        self.obr_box2.set_homogeneous(20)
        self.obr_box2.set_border_width(30)
        self.obr_box3 = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=20)
        self.obr_box3.set_homogeneous(20)
        self.obr_box3.set_border_width(30)
        icon23 = Gtk.Image()
        icon23.set_from_icon_name('gnome-settings', Gtk.IconSize.DIALOG)
        self.codecsbutton = Gtk.Button(label="Codecs Installer", image=icon23)
        self.codecsbutton.set_image_position(2)
        self.codecsbutton.connect("clicked", self.codecs)
        icon24 = Gtk.Image()
        icon24.set_from_icon_name('gnome-settings', Gtk.IconSize.DIALOG)
        self.flashbutton = Gtk.Button(label="Flash Installer", image=icon24)
        self.flashbutton.set_image_position(2)
        self.flashbutton.connect("clicked", self.flash)
        icon25 = Gtk.Image()
        icon25.set_from_icon_name('gnome-settings', Gtk.IconSize.DIALOG)
        self.kernelbutton = Gtk.Button(label="Kernel Manager", image=icon25)
        self.kernelbutton.set_image_position(2)
        self.kernelbutton.connect("clicked", self.kernel)
        icon26 = Gtk.Image()
        icon26.set_from_icon_name('gnome-settings', Gtk.IconSize.DIALOG)
        self.nvidiabutton = Gtk.Button(label="NVidia Drivers", image=icon26)
        self.nvidiabutton.set_image_position(2)
        self.nvidiabutton.connect("clicked", self.nvidia)
        icon27 = Gtk.Image()
        icon27.set_from_icon_name('gnome-settings', Gtk.IconSize.DIALOG)
        self.vboxbutton = Gtk.Button('Virtualbox Drivers', image=icon27)
        self.vboxbutton.set_image_position(2)
        self.vboxbutton.connect("clicked", self.vbox)
        icon29 = Gtk.Image()
        icon29.set_from_icon_name('preferences-system', Gtk.IconSize.DIALOG)
        self.grubbutton = Gtk.Button(label="Bootloader Configuration", image=icon29)
        self.grubbutton.set_image_position(2)
        self.grubbutton.connect("clicked", self.grub)
        icon30 = Gtk.Image()
        icon30.set_from_icon_name('preferences-system', Gtk.IconSize.DIALOG)
        self.usbbutton = Gtk.Button(label="Live USB Creator", image=icon30)
        self.usbbutton.set_image_position(2)
        self.usbbutton.connect("clicked", self.usb)
        icon31 = Gtk.Image()
        icon31.set_from_icon_name('preferences-system', Gtk.IconSize.DIALOG)
        self.ttbutton = Gtk.Button(label="Terminal Tweaks", image=icon31)
        self.ttbutton.set_image_position(2)
        self.ttbutton.connect("clicked", self.tt)
        self.obr_box1.pack_start(self.codecsbutton, True, True, 0)
        self.obr_box1.pack_start(self.flashbutton, True, True, 0)
        self.obr_box2.pack_start(self.kernelbutton, True, True, 0)
        self.obr_box3.pack_start(self.nvidiabutton, True, True, 0)
        self.obr_box3.pack_start(self.vboxbutton, True, True, 0)
        self.obr_box2.pack_start(self.grubbutton, True, True, 0)
        self.page4.pack_start(self.obr_box1, True, True, 0)
        self.page4.pack_start(self.obr_box2, True, True, 0)
        self.page4.pack_start(self.obr_box3, True, True, 0)
        image1 = Gtk.Image(stock=Gtk.STOCK_PREFERENCES)
        self.main_box.pack_start(self.page4, True, True, 0)


    def codecs(self, widget):
        os.system("gksu codecs-installer.sh")
        
    def flash(self, widget):
        os.system("gksu flashinstall.sh")
        
    def kernel(self, widget):
        os.system("gksu kernel-tool.sh")
        
    def nvidia(self, widget):
        os.system("gksu nvidia-driver.sh")
        
    def vbox(self, widget):
        os.system("gksu vbox-clear.sh")
        
    def grub(self, widget):
        os.system("gksu grub-repair.sh")
        
    def usb(self, widget):
        os.system("isotool.sh")
        
    def tt(self, widget):
        os.system("terminal-tweak.sh")

win = MyWindow()
win.connect("delete-event", Gtk.main_quit)
win.show_all()
Gtk.main()



